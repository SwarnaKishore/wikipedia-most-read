{"version":3,"sources":["MostReadArticleCard.js","App.js","reportWebVitals.js","index.js"],"names":["MostReadArticleCard","article","this","props","key","console","log","image","thumbnail","CardMedia","className","source","title","Card","CardHeader","subheader","views","CardContent","Typography","description","CardActions","disableSpacing","IconButton","aria-label","Component","App","state","mostReadArticles","resultsDate","Date","fetch","then","result","json","setState","mostread","articles","date","map","entry","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wWA6CeA,E,uKAjCH,IACDC,EAAWC,KAAKC,MAAhBF,QACAG,EAAOF,KAAKC,MAAZC,IACPC,QAAQC,IAAIL,EAASG,GACvB,IAAMG,EAAQN,EAAQO,WAAa,cAACC,EAAA,EAAD,CAAWC,UAAU,aAAaH,MAAON,EAAQO,UAAUG,OAAQC,MAAOX,EAAQW,QAyBrH,OArBA,eAACC,EAAA,EAAD,CAAgBH,UAAU,OAA1B,UACE,cAACI,EAAA,EAAD,CACEF,MAAOX,EAAQW,MACfG,UAAWd,EAAQe,QAEpBT,GAAgB,GACjB,cAACU,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACGjB,EAAQkB,gBAGb,eAACC,EAAA,EAAD,CAAaC,gBAAc,EAA3B,UACE,cAACC,EAAA,EAAD,CAAYC,aAAW,mBAAvB,SACE,cAAC,IAAD,MAEF,cAACD,EAAA,EAAD,CAAYC,aAAW,QAAvB,SACE,cAAC,IAAD,WAhBKnB,O,GATqBoB,aCqBnBC,E,4MA3BbC,MAAQ,CACNC,iBAAkB,GAClBC,YAAa,IAAIC,M,kEAEE,IAAD,OAIlBC,MAFE,iEAGCC,MAAK,SAACC,GAAD,OAAYA,EAAOC,UACxBF,MAAK,SAACC,GACL,EAAKE,SAAS,CACZP,iBAAkBK,EAAOG,SAASC,SAClCR,YAAa,IAAIC,KAAKG,EAAOG,SAASE,a,+BAKpC,IAEFL,EADqB9B,KAAKwB,MAAzBC,iBACyBW,KAAI,SAACC,EAAOC,GAC1C,OAAO,cAAC,EAAD,CAAqBvC,QAASsC,GAAYC,MAEnD,OAAO,8BAAMR,Q,GAxBCR,aCQHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b3fd4677.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\n\nclass MostReadArticleCard extends Component {\n  render() {\n    const {article} = this.props;\n    const {key} = this.props;\n    console.log(article, key);\n  const image = article.thumbnail && <CardMedia className=\"Card-media\" image={article.thumbnail.source} title={article.title}/>;\n\nconst card = \n  (\n  <Card key={key} className=\"Card\"> \n    <CardHeader\n      title={article.title}\n      subheader={article.views}\n    />\n    {image ? image : ''}\n    <CardContent>\n      <Typography>\n        {article.description}\n      </Typography>\n    </CardContent>\n    <CardActions disableSpacing>\n      <IconButton aria-label=\"add to favorites\">\n        <FavoriteIcon />\n      </IconButton>\n      <IconButton aria-label=\"share\">\n        <ShareIcon />\n      </IconButton>\n    </CardActions>\n  </Card>\n  )\n  return card;\n  }\n}\n\nexport default MostReadArticleCard;","import './App.css';\nimport React, {Component } from 'react';\nimport MostReadArticleCard from './MostReadArticleCard';\n\nclass App extends Component {\n  state = {\n    mostReadArticles: [],\n    resultsDate: new Date(),\n  }\n  componentDidMount() {\n    const url =\n      'https://en.wikipedia.org/api/rest_v1/feed/featured/2020/12/31'\n\n    fetch(url)\n      .then((result) => result.json())\n      .then((result) => {\n        this.setState({\n          mostReadArticles: result.mostread.articles,\n          resultsDate: new Date(result.mostread.date)\n        })\n      })\n  }\n\n  render() {\n    const {mostReadArticles} = this.state;\n    const result = mostReadArticles.map((entry, index) => {\n      return <MostReadArticleCard article={entry} key={index}/>;\n    });\n    return <div>{result}</div>;\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}